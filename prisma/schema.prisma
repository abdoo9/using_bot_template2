generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  OWNER
}

model User {
  userId            BigInt         @id @map("user_id")
  languageCode      String?        @map("language_code")
  role              Role           @default(USER)
  subscriptions     Subscription[]
  botsOwned         Bot[]          @relation("botsOwned")
  messagesSent      Message[]      @relation("UserSentMessage")
  userIsDeactivated Boolean        @default(false) @map("user_is_deactivated")
  ChatNotFound      Boolean        @default(false) @map("chat_not_found")
  updatedAt         DateTime       @updatedAt @map("updated_at")
  createdAt         DateTime       @default(now()) @map("created_at")

  @@map(name: "users")
}

model Bot {
  botId       BigInt         @id @map("bot_id")
  token       String         @unique
  owner       User           @relation(name: "botsOwned", fields: [ownerId], references: [userId])
  ownerId     BigInt         @map("owner_id")
  subscribers Subscription[]
  messages    Message[]
  groupId     BigInt?        @map("group_id")
  firstName   String         @default("bot") @map("first_name")
  username    String         @map("username")
  updatedAt   DateTime       @updatedAt @map("updated_at")
  createdAt   DateTime       @default(now()) @map("created_at")

  @@map(name: "bots")
}

model Message {
  id              Int      @id @default(autoincrement()) @map("id")
  sourceMessageId Int      @map("source_message_id")
  destMessageId   Int      @map("dest_message_id")
  bot             Bot      @relation(fields: [botId], references: [botId])
  botId           BigInt   @map("bot_id")
  sourceId        BigInt   @map("source_id")
  source          User     @relation(name: "UserSentMessage", fields: [sourceId], references: [userId])
  destId          BigInt   @map("dest_id")
  text            String   @default(" ") @map("text")
  updatedAt       DateTime @updatedAt @map("updated_at")
  createdAt       DateTime @default(now()) @map("created_at")

  @@unique([destId, destMessageId, sourceId, botId], name: "dest_pkey")
  @@unique([sourceMessageId, destMessageId, sourceId, botId], name: "source_dest_bot_pkey")
  @@map(name: "messages")
}

model Subscription {
  user         User    @relation(fields: [userId], references: [userId])
  userId       BigInt  @map("user_id")
  bot          Bot     @relation(fields: [botId], references: [botId])
  botId        BigInt  @map("bot_id")
  userIsBanned Boolean @default(false) @map("user_is_banned")
  botIsBlocked Boolean @default(false) @map("bot_is_blocked")

  @@unique([userId, botId], name: "subscription_pkey")
  @@map(name: "subscriptions")
}
